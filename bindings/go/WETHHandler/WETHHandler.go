// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package WETHHandler

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// WETHHandlerDepositRecord is an auto generated low-level Go binding around an user-defined struct.
type WETHHandlerDepositRecord struct {
	TokenAddress                common.Address
	DestinationChainID          uint8
	ResourceID                  [32]byte
	DestinationRecipientAddress []byte
	Depositer                   common.Address
	Amount                      *big.Int
	SignData                    []byte
}

// WETHHandlerABI is the input ABI used to generate the binding from.
const WETHHandlerABI = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"bridgeAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"initialResourceIDs\",\"type\":\"bytes32[]\"},{\"internalType\":\"address[]\",\"name\":\"initialContractAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"burnableContractAddresses\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"LogString\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_bridgeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_burnList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_contractWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"_depositRecords\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_destinationChainID\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_resourceID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_destinationRecipientAddress\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_depositer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_signData\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"h\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"_recoverSigner2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"_resourceIDToTokenContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"_safeTransferETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_tokenContractAddressToResourceID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addressToString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"bytes32ToString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"bytesToString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"resourceID\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"destinationChainID\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"depositNonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"depositer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"resourceID\",\"type\":\"bytes32\"},{\"internalType\":\"address[36]\",\"name\":\"signers\",\"type\":\"address[36]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"executeProposal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"depositNonce\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"destId\",\"type\":\"uint8\"}],\"name\":\"getDepositRecord\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_destinationChainID\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_resourceID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_destinationRecipientAddress\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_depositer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_signData\",\"type\":\"bytes\"}],\"internalType\":\"structWETHHandler.DepositRecord\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"setBurnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"resourceID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"setResource\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toStringBase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"uintToString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOrTokenID\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]"

// WETHHandlerBin is the compiled bytecode used for deploying new contracts.
var WETHHandlerBin = "0x60806040523480156200001157600080fd5b5060405162003e3f38038062003e3f833981810160405281019062000037919062000483565b81518351146200007e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000075906200062c565b60405180910390fd5b836000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060005b8351811015620001135762000105848281518110620000dc57fe5b6020026020010151848381518110620000f157fe5b60200260200101516200015f60201b60201c565b8080600101915050620000c1565b5060005b81518110156200015457620001468282815181106200013257fe5b60200260200101516200025160201b60201c565b808060010191505062000117565b505050505062000751565b806001600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16620002e0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002d7906200060a565b60405180910390fd5b6001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000815190506200034c816200071d565b92915050565b600082601f8301126200036457600080fd5b81516200037b62000375826200067c565b6200064e565b91508181835260208401935060208101905083856020840282011115620003a157600080fd5b60005b83811015620003d55781620003ba88826200033b565b845260208401935060208301925050600181019050620003a4565b5050505092915050565b600082601f830112620003f157600080fd5b8151620004086200040282620006a5565b6200064e565b915081818352602084019350602081019050838560208402820111156200042e57600080fd5b60005b838110156200046257816200044788826200046c565b84526020840193506020830192505060018101905062000431565b5050505092915050565b6000815190506200047d8162000737565b92915050565b600080600080608085870312156200049a57600080fd5b6000620004aa878288016200033b565b945050602085015167ffffffffffffffff811115620004c857600080fd5b620004d687828801620003df565b935050604085015167ffffffffffffffff811115620004f457600080fd5b620005028782880162000352565b925050606085015167ffffffffffffffff8111156200052057600080fd5b6200052e8782880162000352565b91505092959194509250565b600062000549602483620006ce565b91507f70726f766964656420636f6e7472616374206973206e6f742077686974656c6960008301527f73746564000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000620005b1603c83620006ce565b91507f696e697469616c5265736f7572636549447320616e6420696e697469616c436f60008301527f6e7472616374416464726573736573206c656e206d69736d61746368000000006020830152604082019050919050565b6000602082019050818103600083015262000625816200053a565b9050919050565b600060208201905081810360008301526200064781620005a2565b9050919050565b6000604051905081810181811067ffffffffffffffff821117156200067257600080fd5b8060405250919050565b600067ffffffffffffffff8211156200069457600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115620006bd57600080fd5b602082029050602081019050919050565b600082825260208201905092915050565b6000620006ec82620006fd565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200072881620006df565b81146200073457600080fd5b50565b6200074281620006f3565b81146200074e57600080fd5b50565b6136de80620007616000396000f3fe6080604052600436106101185760003560e01c80636a70d081116100a0578063b8fa373611610064578063b8fa373614610435578063ba484c091461045e578063c8ba6c871461049b578063d9caed12146104d8578063e9395679146105015761011f565b80636a70d081146103045780637f79bea8146103415780638d1b75e41461037e5780638f667892146103bb5780639201de55146103f85761011f565b806338995da9116100e757806338995da9146101f557806339614e4f1461021e5780634402027f1461025b5780635de117991461029e5780635e57966d146102c75761011f565b806307b7ed99146101245780630a6d55d81461014d578063138f0b8b1461018a578063318c136e146101ca5761011f565b3661011f57005b600080fd5b34801561013057600080fd5b5061014b60048036038101906101469190612494565b61053e565b005b34801561015957600080fd5b50610174600480360381019061016f9190612548565b610552565b604051610181919061303f565b60405180910390f35b34801561019657600080fd5b506101b160048036038101906101ac91906125ad565b610585565b6040516101c194939291906130f2565b60405180910390f35b3480156101d657600080fd5b506101df6108fe565b6040516101ec919061303f565b60405180910390f35b34801561020157600080fd5b5061021c6004803603810190610217919061267e565b610922565b005b34801561022a57600080fd5b5061024560048036038101906102409190612710565b610de0565b6040516102529190613197565b60405180910390f35b34801561026757600080fd5b50610282600480360381019061027d91906127b6565b610e11565b604051610295979695949392919061305a565b60405180910390f35b3480156102aa57600080fd5b506102c560048036038101906102c0919061250c565b610fdd565b005b3480156102d357600080fd5b506102ee60048036038101906102e99190612494565b6110d6565b6040516102fb9190613197565b60405180910390f35b34801561031057600080fd5b5061032b60048036038101906103269190612494565b611107565b60405161033891906130d7565b60405180910390f35b34801561034d57600080fd5b5061036860048036038101906103639190612494565b611127565b60405161037591906130d7565b60405180910390f35b34801561038a57600080fd5b506103a560048036038101906103a09190612710565b611147565b6040516103b29190613197565b60405180910390f35b3480156103c757600080fd5b506103e260048036038101906103dd919061261b565b6113ca565b6040516103ef919061303f565b60405180910390f35b34801561040457600080fd5b5061041f600480360381019061041a9190612548565b611494565b60405161042c9190613197565b60405180910390f35b34801561044157600080fd5b5061045c60048036038101906104579190612571565b6114c5565b005b34801561046a57600080fd5b506104856004803603810190610480919061277a565b6114db565b6040516104929190613439565b60405180910390f35b3480156104a757600080fd5b506104c260048036038101906104bd9190612494565b611755565b6040516104cf9190613137565b60405180910390f35b3480156104e457600080fd5b506104ff60048036038101906104fa91906124bd565b61176d565b005b34801561050d57600080fd5b5061052860048036038101906105239190612751565b611772565b6040516105359190613197565b60405180910390f35b6105466117a3565b61054f81611833565b50565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000806105936117a3565b7fa95e6e2a182411e7a6f9ed114a85c3761d87f9b8f453d842c71235aa64fff99f6040516105c090613299565b60405180910390a1600060607fa95e6e2a182411e7a6f9ed114a85c3761d87f9b8f453d842c71235aa64fff99f6040516105f9906132b9565b60405180910390a1606435915060405190506084358082016020016040526084360360848337507fa95e6e2a182411e7a6f9ed114a85c3761d87f9b8f453d842c71235aa64fff99f60405161064d906133b9565b60405180910390a160006106628a8a8a61191a565b90506000151581151514156106875760008030600096509650965096505050506108f3565b7fa95e6e2a182411e7a6f9ed114a85c3761d87f9b8f453d842c71235aa64fff99f6040516106b490613359565b60405180910390a1600080600160008e815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690507fa95e6e2a182411e7a6f9ed114a85c3761d87f9b8f453d842c71235aa64fff99f60405161072290613379565b60405180910390a1602084015191507fa95e6e2a182411e7a6f9ed114a85c3761d87f9b8f453d842c71235aa64fff99f60405161075e906131d9565b60405180910390a1600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166107f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e9906133f9565b60405180910390fd5b7fa95e6e2a182411e7a6f9ed114a85c3761d87f9b8f453d842c71235aa64fff99f60405161081f90613339565b60405180910390a17fa95e6e2a182411e7a6f9ed114a85c3761d87f9b8f453d842c71235aa64fff99f61085186611772565b60405161085e9190613197565b60405180910390a17fa95e6e2a182411e7a6f9ed114a85c3761d87f9b8f453d842c71235aa64fff99f604051610893906131f9565b60405180910390a17fa95e6e2a182411e7a6f9ed114a85c3761d87f9b8f453d842c71235aa64fff99f6108c88360601c6110d6565b6040516108d59190613197565b60405180910390a16001838360601c87985098509850985050505050505b945094509450949050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61092a6117a3565b60007fa95e6e2a182411e7a6f9ed114a85c3761d87f9b8f453d842c71235aa64fff99f604051610959906132d9565b60405180910390a16109c66109bf6000602086868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611a2f9092919063ffffffff16565b6000611b80565b90507fa95e6e2a182411e7a6f9ed114a85c3761d87f9b8f453d842c71235aa64fff99f6109f282611772565b6040516109ff9190613197565b60405180910390a16060610a646020601486868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611a2f9092919063ffffffff16565b90507fa95e6e2a182411e7a6f9ed114a85c3761d87f9b8f453d842c71235aa64fff99f610a9082610de0565b604051610a9d9190613197565b60405180910390a17fa95e6e2a182411e7a6f9ed114a85c3761d87f9b8f453d842c71235aa64fff99f604051610ad290613399565b60405180910390a16000600160008a815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610b9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b95906133f9565b60405180910390fd5b7fa95e6e2a182411e7a6f9ed114a85c3761d87f9b8f453d842c71235aa64fff99f604051610bcb90613419565b60405180910390a16040518060e001604052808273ffffffffffffffffffffffffffffffffffffffff1681526020018960ff1681526020018a81526020018381526020018773ffffffffffffffffffffffffffffffffffffffff168152602001848152602001610c94603460ff1661124461ffff1689898080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611a2f9092919063ffffffff16565b815250600560008a60ff1660ff16815260200190815260200160002060008967ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff021916908360ff160217905550604082015181600101556060820151816002019080519060200190610d639291906121e5565b5060808201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816004015560c0820151816005019080519060200190610dd19291906121e5565b50905050505050505050505050565b6060610e0a82604051602001610df69190612fe5565b604051602081830303815290604052611147565b9050919050565b6005602052816000526040600020602052806000526040600020600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460ff1690806001015490806002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f095780601f10610ede57610100808354040283529160200191610f09565b820191906000526020600020905b815481529060010190602001808311610eec57829003601f168201915b5050505050908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806004015490806005018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fd35780601f10610fa857610100808354040283529160200191610fd3565b820191906000526020600020905b815481529060010190602001808311610fb657829003601f168201915b5050505050905087565b60008273ffffffffffffffffffffffffffffffffffffffff1682600067ffffffffffffffff8111801561100f57600080fd5b506040519080825280601f01601f1916602001820160405280156110425781602001600182028036833780820191505090505b506040516110509190612fe5565b60006040518083038185875af1925050503d806000811461108d576040519150601f19603f3d011682016040523d82523d6000602084013e611092565b606091505b50509050806110d1577fa95e6e2a182411e7a6f9ed114a85c3761d87f9b8f453d842c71235aa64fff99f6040516110c890613319565b60405180910390a15b505050565b6060611100826040516020016110ec9190612faf565b604051602081830303815290604052611147565b9050919050565b60046020528060005260406000206000915054906101000a900460ff1681565b60036020528060005260406000206000915054906101000a900460ff1681565b6060806040518060400160405280601081526020017f303132333435363738396162636465660000000000000000000000000000000081525090506060600284510260020167ffffffffffffffff811180156111a257600080fd5b506040519080825280601f01601f1916602001820160405280156111d55781602001600182028036833780820191505090505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061120657fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061126357fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060005b84518110156113bf578260048683815181106112ad57fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c60f81c60ff16815181106112ec57fe5b602001015160f81c60f81b82600283026002018151811061130957fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535082600f60f81b86838151811061134a57fe5b602001015160f81c60f81b1660f81c60ff168151811061136657fe5b602001015160f81c60f81b82600283026003018151811061138357fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050611295565b508092505050919050565b600060606040518060400160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a33320000000081525090506000818760405160200161141b929190612ffc565b6040516020818303038152906040528051906020012090506000600182888888604051600081526020016040526040516114589493929190613152565b6020604051602081039080840390855afa15801561147a573d6000803e3d6000fd5b505050602060405103519050809350505050949350505050565b60606114be826040516020016114aa9190612fca565b604051602081830303815290604052611147565b9050919050565b6114cd6117a3565b6114d78282611bde565b5050565b6114e3612265565b600560008360ff1660ff16815260200190815260200160002060008467ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff1660ff1660ff16815260200160018201548152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116425780601f1061161757610100808354040283529160200191611642565b820191906000526020600020905b81548152906001019060200180831161162557829003601f168201915b505050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201548152602001600582018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117445780601f1061171957610100808354040283529160200191611744565b820191906000526020600020905b81548152906001019060200180831161172757829003601f168201915b505050505081525050905092915050565b60026020528060005260406000206000915090505481565b505050565b606061179c826040516020016117889190613024565b604051602081830303815290604052611147565b9050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611831576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611828906131b9565b60405180910390fd5b565b600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166118bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118b690613259565b60405180910390fd5b6001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600060606000611988611981603460ff16602088888080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611a2f9092919063ffffffff16565b6000611cd0565b90506119f3602060340160ff1660206112440361ffff1687878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611a2f9092919063ffffffff16565b91506119fd6122d4565b611a056122d4565b611a0e84611d42565b8092508193505050611a228382848b611e20565b9450505050509392505050565b606081601f83011015611a77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a6e906132f9565b60405180910390fd5b828284011015611abc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ab3906132f9565b60405180910390fd5b81830184511015611b02576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611af9906133d9565b60405180910390fd5b6060821560008114611b235760405191506000825260208201604052611b74565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611b615780518352602083019250602081019050611b44565b50868552601f19601f8301166040525050505b50809150509392505050565b60006020820183511015611bc9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bc090613219565b60405180910390fd5b60008260200184015190508091505092915050565b806001600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008060005b6020811015611d37576008810260ff60f81b8683870181518110611cf657fe5b602001015160f81c60f81b167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c821791508080600101915050611cd6565b508091505092915050565b611d4a6122d4565b611d526122d4565b611d5a6122d4565b611d626122d4565b6000604060410160ff16905060005b602460ff168160ff161015611e1157611da8828260ff160267ffffffffffffffff16604060ff1689611a2f9092919063ffffffff16565b848260ff1660248110611db757fe5b6020020181905250611ded604060ff16838360ff16020167ffffffffffffffff16604160ff1689611a2f9092919063ffffffff16565b838260ff1660248110611dfc57fe5b60200201819052508080600101915050611d71565b50828294509450505050915091565b6000806000905060008060008093505b602460ff168460ff161015611f0b57611e5b878560ff1660248110611e5157fe5b6020020151611f5a565b905060001515611e6b8288611f76565b15151415611e7857611efe565b611e9689898660ff1660248110611e8b57fe5b602002015183611ffa565b91508115611ea75782806001019350505b60198360ff1610611efd57611ef06040518060400160405280601081526020017f766572696679206973204f4b202e2e2e00000000000000000000000000000000815250612042565b6001945050505050611f52565b5b8380600101945050611e30565b611f496040518060400160405280601481526020017f766572696679206973206661696c6564202e2e2e000000000000000000000000815250612042565b60009450505050505b949350505050565b6000808280519060200120905080600052600051915050919050565b6000806000905060005b602460ff168160ff161015611fee578473ffffffffffffffffffffffffffffffffffffffff16848260ff1660248110611fb557fe5b602002015173ffffffffffffffffffffffffffffffffffffffff161415611fe157600192505050611ff4565b8080600101915050611f80565b50809150505b92915050565b60008061200785856120db565b90508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16149150509392505050565b6120d8816040516024016120569190613197565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506121bc565b50565b60006041825114612121576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161211890613239565b60405180910390fd5b60008060006020850151925060408501519150606085015160001a9050601b8160ff16101561215157601b810190505b601b8160ff1614806121665750601c8160ff16145b6121a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161219c90613279565b60405180910390fd5b6121b1868285856113ca565b935050505092915050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061222657805160ff1916838001178555612254565b82800160010185558215612254579182015b82811115612253578251825591602001919060010190612238565b5b50905061226191906122fc565b5090565b6040518060e00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600060ff1681526020016000801916815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001606081525090565b6040518061048001604052806024905b60608152602001906001900390816122e45790505090565b5b808211156123155760008160009055506001016122fd565b5090565b60008135905061232881613635565b92915050565b600082601f83011261233f57600080fd5b602461235261234d82613488565b61345b565b9150818385602084028201111561236857600080fd5b60005b83811015612398578161237e8882612319565b84526020840193506020830192505060018101905061236b565b5050505092915050565b6000813590506123b18161364c565b92915050565b60008083601f8401126123c957600080fd5b8235905067ffffffffffffffff8111156123e257600080fd5b6020830191508360018202830111156123fa57600080fd5b9250929050565b600082601f83011261241257600080fd5b8135612425612420826134aa565b61345b565b9150808252602083016020830185838301111561244157600080fd5b61244c83828461359d565b50505092915050565b60008135905061246481613663565b92915050565b6000813590506124798161367a565b92915050565b60008135905061248e81613691565b92915050565b6000602082840312156124a657600080fd5b60006124b484828501612319565b91505092915050565b6000806000606084860312156124d257600080fd5b60006124e086828701612319565b93505060206124f186828701612319565b925050604061250286828701612455565b9150509250925092565b6000806040838503121561251f57600080fd5b600061252d85828601612319565b925050602061253e85828601612455565b9150509250929050565b60006020828403121561255a57600080fd5b6000612568848285016123a2565b91505092915050565b6000806040838503121561258457600080fd5b6000612592858286016123a2565b92505060206125a385828601612319565b9150509250929050565b6000806000806104c085870312156125c457600080fd5b60006125d2878288016123a2565b94505060206125e38782880161232e565b9350506104a085013567ffffffffffffffff81111561260157600080fd5b61260d878288016123b7565b925092505092959194509250565b6000806000806080858703121561263157600080fd5b600061263f878288016123a2565b94505060206126508782880161247f565b9350506040612661878288016123a2565b9250506060612672878288016123a2565b91505092959194509250565b60008060008060008060a0878903121561269757600080fd5b60006126a589828a016123a2565b96505060206126b689828a0161247f565b95505060406126c789828a0161246a565b94505060606126d889828a01612319565b935050608087013567ffffffffffffffff8111156126f557600080fd5b61270189828a016123b7565b92509250509295509295509295565b60006020828403121561272257600080fd5b600082013567ffffffffffffffff81111561273c57600080fd5b61274884828501612401565b91505092915050565b60006020828403121561276357600080fd5b600061277184828501612455565b91505092915050565b6000806040838503121561278d57600080fd5b600061279b8582860161246a565b92505060206127ac8582860161247f565b9150509250929050565b600080604083850312156127c957600080fd5b60006127d78582860161247f565b92505060206127e88582860161246a565b9150509250929050565b6127fb8161352a565b82525050565b61280a8161352a565b82525050565b61282161281c8261352a565b6135df565b82525050565b6128308161353c565b82525050565b61283f81613548565b82525050565b61284e81613548565b82525050565b61286561286082613548565b6135f1565b82525050565b6000612876826134d6565b61288081856134ec565b93506128908185602086016135ac565b61289981613617565b840191505092915050565b60006128af826134d6565b6128b981856134fd565b93506128c98185602086016135ac565b6128d281613617565b840191505092915050565b60006128e8826134d6565b6128f2818561350e565b93506129028185602086016135ac565b80840191505092915050565b6000612919826134e1565b6129238185613519565b93506129338185602086016135ac565b61293c81613617565b840191505092915050565b6000612954601e83613519565b91507f73656e646572206d7573742062652062726964676520636f6e747261637400006000830152602082019050919050565b6000612994601583613519565b91507f636f6d6520746f20657263323068616e646c65203100000000000000000000006000830152602082019050919050565b60006129d4601183613519565b91507f726563697069656e7441646472657373200000000000000000000000000000006000830152602082019050919050565b6000612a14601483613519565b91507f736c6963696e67206f7574206f662072616e67650000000000000000000000006000830152602082019050919050565b6000612a54601683613519565b91507f5265717569726520636f7272656374206c656e677468000000000000000000006000830152602082019050919050565b6000612a94602483613519565b91507f70726f766964656420636f6e7472616374206973206e6f742077686974656c6960008301527f73746564000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612afa601b83613519565b91507f5369676e61747572652076657273696f6e206e6f74206d6174636800000000006000830152602082019050919050565b6000612b3a602683613519565b91507f78786c20636f6d6520746f207765746868616e6465722065786563757465507260008301527f6f706f73616c00000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612ba0600983613519565b91507f636f6d6520746f203100000000000000000000000000000000000000000000006000830152602082019050919050565b6000612be0601a83613519565b91507f636f6d6520746f207765746868616e646572206465706f7369740000000000006000830152602082019050919050565b6000612c20600e83613519565b91507f736c6963655f6f766572666c6f770000000000000000000000000000000000006000830152602082019050919050565b6000612c60601283613519565b91507f746f6b656e2063616c6c206661696c65642000000000000000000000000000006000830152602082019050919050565b6000612ca0600783613519565b91507f616d6f756e7420000000000000000000000000000000000000000000000000006000830152602082019050919050565b6000612ce0600983613519565b91507f636f6d6520746f203200000000000000000000000000000000000000000000006000830152602082019050919050565b6000612d20600983613519565b91507f636f6d6520746f203300000000000000000000000000000000000000000000006000830152602082019050919050565b6000612d60600e83613519565b91507f6465706f73697420746f20312e350000000000000000000000000000000000006000830152602082019050919050565b6000612da0600b83613519565b91507f636f6d6520746f20312e350000000000000000000000000000000000000000006000830152602082019050919050565b6000612de0601183613519565b91507f736c6963655f6f75744f66426f756e64730000000000000000000000000000006000830152602082019050919050565b6000612e20602883613519565b91507f70726f766964656420746f6b656e41646472657373206973206e6f742077686960008301527f74656c69737465640000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612e86601b83613519565b91507f77657468206465706f7369742064617461207374617274202e2e2e00000000006000830152602082019050919050565b600060e083016000830151612ed160008601826127f2565b506020830151612ee46020860182612f91565b506040830151612ef76040860182612836565b5060608301518482036060860152612f0f828261286b565b9150506080830151612f2460808601826127f2565b5060a0830151612f3760a0860182612f5c565b5060c083015184820360c0860152612f4f828261286b565b9150508091505092915050565b612f6581613572565b82525050565b612f7481613572565b82525050565b612f8b612f8682613572565b61360d565b82525050565b612f9a81613590565b82525050565b612fa981613590565b82525050565b6000612fbb8284612810565b60148201915081905092915050565b6000612fd68284612854565b60208201915081905092915050565b6000612ff182846128dd565b915081905092915050565b600061300882856128dd565b91506130148284612854565b6020820191508190509392505050565b60006130308284612f7a565b60208201915081905092915050565b60006020820190506130546000830184612801565b92915050565b600060e08201905061306f600083018a612801565b61307c6020830189612fa0565b6130896040830188612845565b818103606083015261309b81876128a4565b90506130aa6080830186612801565b6130b760a0830185612f6b565b81810360c08301526130c981846128a4565b905098975050505050505050565b60006020820190506130ec6000830184612827565b92915050565b60006080820190506131076000830187612827565b6131146020830186612827565b6131216040830185612801565b61312e6060830184612f6b565b95945050505050565b600060208201905061314c6000830184612845565b92915050565b60006080820190506131676000830187612845565b6131746020830186612fa0565b6131816040830185612845565b61318e6060830184612845565b95945050505050565b600060208201905081810360008301526131b1818461290e565b905092915050565b600060208201905081810360008301526131d281612947565b9050919050565b600060208201905081810360008301526131f281612987565b9050919050565b60006020820190508181036000830152613212816129c7565b9050919050565b6000602082019050818103600083015261323281612a07565b9050919050565b6000602082019050818103600083015261325281612a47565b9050919050565b6000602082019050818103600083015261327281612a87565b9050919050565b6000602082019050818103600083015261329281612aed565b9050919050565b600060208201905081810360008301526132b281612b2d565b9050919050565b600060208201905081810360008301526132d281612b93565b9050919050565b600060208201905081810360008301526132f281612bd3565b9050919050565b6000602082019050818103600083015261331281612c13565b9050919050565b6000602082019050818103600083015261333281612c53565b9050919050565b6000602082019050818103600083015261335281612c93565b9050919050565b6000602082019050818103600083015261337281612cd3565b9050919050565b6000602082019050818103600083015261339281612d13565b9050919050565b600060208201905081810360008301526133b281612d53565b9050919050565b600060208201905081810360008301526133d281612d93565b9050919050565b600060208201905081810360008301526133f281612dd3565b9050919050565b6000602082019050818103600083015261341281612e13565b9050919050565b6000602082019050818103600083015261343281612e79565b9050919050565b600060208201905081810360008301526134538184612eb9565b905092915050565b6000604051905081810181811067ffffffffffffffff8211171561347e57600080fd5b8060405250919050565b600067ffffffffffffffff82111561349f57600080fd5b602082029050919050565b600067ffffffffffffffff8211156134c157600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600061353582613552565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b838110156135ca5780820151818401526020810190506135af565b838111156135d9576000848401525b50505050565b60006135ea826135fb565b9050919050565b6000819050919050565b600061360682613628565b9050919050565b6000819050919050565b6000601f19601f8301169050919050565b60008160601b9050919050565b61363e8161352a565b811461364957600080fd5b50565b61365581613548565b811461366057600080fd5b50565b61366c81613572565b811461367757600080fd5b50565b6136838161357c565b811461368e57600080fd5b50565b61369a81613590565b81146136a557600080fd5b5056fea2646970667358221220b7e8b4221548a2c0fc1345dadcfb934f7674381a73bae6ccf2a1c1ba3266780b64736f6c634300060c0033"

// DeployWETHHandler deploys a new Ethereum contract, binding an instance of WETHHandler to it.
func DeployWETHHandler(auth *bind.TransactOpts, backend bind.ContractBackend, bridgeAddress common.Address, initialResourceIDs [][32]byte, initialContractAddresses []common.Address, burnableContractAddresses []common.Address) (common.Address, *types.Transaction, *WETHHandler, error) {
	parsed, err := abi.JSON(strings.NewReader(WETHHandlerABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(WETHHandlerBin), backend, bridgeAddress, initialResourceIDs, initialContractAddresses, burnableContractAddresses)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &WETHHandler{WETHHandlerCaller: WETHHandlerCaller{contract: contract}, WETHHandlerTransactor: WETHHandlerTransactor{contract: contract}, WETHHandlerFilterer: WETHHandlerFilterer{contract: contract}}, nil
}

// WETHHandler is an auto generated Go binding around an Ethereum contract.
type WETHHandler struct {
	WETHHandlerCaller     // Read-only binding to the contract
	WETHHandlerTransactor // Write-only binding to the contract
	WETHHandlerFilterer   // Log filterer for contract events
}

// WETHHandlerCaller is an auto generated read-only Go binding around an Ethereum contract.
type WETHHandlerCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// WETHHandlerTransactor is an auto generated write-only Go binding around an Ethereum contract.
type WETHHandlerTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// WETHHandlerFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type WETHHandlerFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// WETHHandlerSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type WETHHandlerSession struct {
	Contract     *WETHHandler      // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// WETHHandlerCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type WETHHandlerCallerSession struct {
	Contract *WETHHandlerCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts      // Call options to use throughout this session
}

// WETHHandlerTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type WETHHandlerTransactorSession struct {
	Contract     *WETHHandlerTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts      // Transaction auth options to use throughout this session
}

// WETHHandlerRaw is an auto generated low-level Go binding around an Ethereum contract.
type WETHHandlerRaw struct {
	Contract *WETHHandler // Generic contract binding to access the raw methods on
}

// WETHHandlerCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type WETHHandlerCallerRaw struct {
	Contract *WETHHandlerCaller // Generic read-only contract binding to access the raw methods on
}

// WETHHandlerTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type WETHHandlerTransactorRaw struct {
	Contract *WETHHandlerTransactor // Generic write-only contract binding to access the raw methods on
}

// NewWETHHandler creates a new instance of WETHHandler, bound to a specific deployed contract.
func NewWETHHandler(address common.Address, backend bind.ContractBackend) (*WETHHandler, error) {
	contract, err := bindWETHHandler(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &WETHHandler{WETHHandlerCaller: WETHHandlerCaller{contract: contract}, WETHHandlerTransactor: WETHHandlerTransactor{contract: contract}, WETHHandlerFilterer: WETHHandlerFilterer{contract: contract}}, nil
}

// NewWETHHandlerCaller creates a new read-only instance of WETHHandler, bound to a specific deployed contract.
func NewWETHHandlerCaller(address common.Address, caller bind.ContractCaller) (*WETHHandlerCaller, error) {
	contract, err := bindWETHHandler(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &WETHHandlerCaller{contract: contract}, nil
}

// NewWETHHandlerTransactor creates a new write-only instance of WETHHandler, bound to a specific deployed contract.
func NewWETHHandlerTransactor(address common.Address, transactor bind.ContractTransactor) (*WETHHandlerTransactor, error) {
	contract, err := bindWETHHandler(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &WETHHandlerTransactor{contract: contract}, nil
}

// NewWETHHandlerFilterer creates a new log filterer instance of WETHHandler, bound to a specific deployed contract.
func NewWETHHandlerFilterer(address common.Address, filterer bind.ContractFilterer) (*WETHHandlerFilterer, error) {
	contract, err := bindWETHHandler(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &WETHHandlerFilterer{contract: contract}, nil
}

// bindWETHHandler binds a generic wrapper to an already deployed contract.
func bindWETHHandler(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(WETHHandlerABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_WETHHandler *WETHHandlerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _WETHHandler.Contract.WETHHandlerCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_WETHHandler *WETHHandlerRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _WETHHandler.Contract.WETHHandlerTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_WETHHandler *WETHHandlerRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _WETHHandler.Contract.WETHHandlerTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_WETHHandler *WETHHandlerCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _WETHHandler.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_WETHHandler *WETHHandlerTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _WETHHandler.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_WETHHandler *WETHHandlerTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _WETHHandler.Contract.contract.Transact(opts, method, params...)
}

// BridgeAddress is a free data retrieval call binding the contract method 0x318c136e.
//
// Solidity: function _bridgeAddress() view returns(address)
func (_WETHHandler *WETHHandlerCaller) BridgeAddress(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _WETHHandler.contract.Call(opts, &out, "_bridgeAddress")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// BridgeAddress is a free data retrieval call binding the contract method 0x318c136e.
//
// Solidity: function _bridgeAddress() view returns(address)
func (_WETHHandler *WETHHandlerSession) BridgeAddress() (common.Address, error) {
	return _WETHHandler.Contract.BridgeAddress(&_WETHHandler.CallOpts)
}

// BridgeAddress is a free data retrieval call binding the contract method 0x318c136e.
//
// Solidity: function _bridgeAddress() view returns(address)
func (_WETHHandler *WETHHandlerCallerSession) BridgeAddress() (common.Address, error) {
	return _WETHHandler.Contract.BridgeAddress(&_WETHHandler.CallOpts)
}

// BurnList is a free data retrieval call binding the contract method 0x6a70d081.
//
// Solidity: function _burnList(address ) view returns(bool)
func (_WETHHandler *WETHHandlerCaller) BurnList(opts *bind.CallOpts, arg0 common.Address) (bool, error) {
	var out []interface{}
	err := _WETHHandler.contract.Call(opts, &out, "_burnList", arg0)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// BurnList is a free data retrieval call binding the contract method 0x6a70d081.
//
// Solidity: function _burnList(address ) view returns(bool)
func (_WETHHandler *WETHHandlerSession) BurnList(arg0 common.Address) (bool, error) {
	return _WETHHandler.Contract.BurnList(&_WETHHandler.CallOpts, arg0)
}

// BurnList is a free data retrieval call binding the contract method 0x6a70d081.
//
// Solidity: function _burnList(address ) view returns(bool)
func (_WETHHandler *WETHHandlerCallerSession) BurnList(arg0 common.Address) (bool, error) {
	return _WETHHandler.Contract.BurnList(&_WETHHandler.CallOpts, arg0)
}

// ContractWhitelist is a free data retrieval call binding the contract method 0x7f79bea8.
//
// Solidity: function _contractWhitelist(address ) view returns(bool)
func (_WETHHandler *WETHHandlerCaller) ContractWhitelist(opts *bind.CallOpts, arg0 common.Address) (bool, error) {
	var out []interface{}
	err := _WETHHandler.contract.Call(opts, &out, "_contractWhitelist", arg0)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// ContractWhitelist is a free data retrieval call binding the contract method 0x7f79bea8.
//
// Solidity: function _contractWhitelist(address ) view returns(bool)
func (_WETHHandler *WETHHandlerSession) ContractWhitelist(arg0 common.Address) (bool, error) {
	return _WETHHandler.Contract.ContractWhitelist(&_WETHHandler.CallOpts, arg0)
}

// ContractWhitelist is a free data retrieval call binding the contract method 0x7f79bea8.
//
// Solidity: function _contractWhitelist(address ) view returns(bool)
func (_WETHHandler *WETHHandlerCallerSession) ContractWhitelist(arg0 common.Address) (bool, error) {
	return _WETHHandler.Contract.ContractWhitelist(&_WETHHandler.CallOpts, arg0)
}

// DepositRecords is a free data retrieval call binding the contract method 0x4402027f.
//
// Solidity: function _depositRecords(uint8 , uint64 ) view returns(address _tokenAddress, uint8 _destinationChainID, bytes32 _resourceID, bytes _destinationRecipientAddress, address _depositer, uint256 _amount, bytes _signData)
func (_WETHHandler *WETHHandlerCaller) DepositRecords(opts *bind.CallOpts, arg0 uint8, arg1 uint64) (struct {
	TokenAddress                common.Address
	DestinationChainID          uint8
	ResourceID                  [32]byte
	DestinationRecipientAddress []byte
	Depositer                   common.Address
	Amount                      *big.Int
	SignData                    []byte
}, error) {
	var out []interface{}
	err := _WETHHandler.contract.Call(opts, &out, "_depositRecords", arg0, arg1)

	outstruct := new(struct {
		TokenAddress                common.Address
		DestinationChainID          uint8
		ResourceID                  [32]byte
		DestinationRecipientAddress []byte
		Depositer                   common.Address
		Amount                      *big.Int
		SignData                    []byte
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.TokenAddress = *abi.ConvertType(out[0], new(common.Address)).(*common.Address)
	outstruct.DestinationChainID = *abi.ConvertType(out[1], new(uint8)).(*uint8)
	outstruct.ResourceID = *abi.ConvertType(out[2], new([32]byte)).(*[32]byte)
	outstruct.DestinationRecipientAddress = *abi.ConvertType(out[3], new([]byte)).(*[]byte)
	outstruct.Depositer = *abi.ConvertType(out[4], new(common.Address)).(*common.Address)
	outstruct.Amount = *abi.ConvertType(out[5], new(*big.Int)).(**big.Int)
	outstruct.SignData = *abi.ConvertType(out[6], new([]byte)).(*[]byte)

	return *outstruct, err

}

// DepositRecords is a free data retrieval call binding the contract method 0x4402027f.
//
// Solidity: function _depositRecords(uint8 , uint64 ) view returns(address _tokenAddress, uint8 _destinationChainID, bytes32 _resourceID, bytes _destinationRecipientAddress, address _depositer, uint256 _amount, bytes _signData)
func (_WETHHandler *WETHHandlerSession) DepositRecords(arg0 uint8, arg1 uint64) (struct {
	TokenAddress                common.Address
	DestinationChainID          uint8
	ResourceID                  [32]byte
	DestinationRecipientAddress []byte
	Depositer                   common.Address
	Amount                      *big.Int
	SignData                    []byte
}, error) {
	return _WETHHandler.Contract.DepositRecords(&_WETHHandler.CallOpts, arg0, arg1)
}

// DepositRecords is a free data retrieval call binding the contract method 0x4402027f.
//
// Solidity: function _depositRecords(uint8 , uint64 ) view returns(address _tokenAddress, uint8 _destinationChainID, bytes32 _resourceID, bytes _destinationRecipientAddress, address _depositer, uint256 _amount, bytes _signData)
func (_WETHHandler *WETHHandlerCallerSession) DepositRecords(arg0 uint8, arg1 uint64) (struct {
	TokenAddress                common.Address
	DestinationChainID          uint8
	ResourceID                  [32]byte
	DestinationRecipientAddress []byte
	Depositer                   common.Address
	Amount                      *big.Int
	SignData                    []byte
}, error) {
	return _WETHHandler.Contract.DepositRecords(&_WETHHandler.CallOpts, arg0, arg1)
}

// RecoverSigner2 is a free data retrieval call binding the contract method 0x8f667892.
//
// Solidity: function _recoverSigner2(bytes32 h, uint8 v, bytes32 r, bytes32 s) pure returns(address)
func (_WETHHandler *WETHHandlerCaller) RecoverSigner2(opts *bind.CallOpts, h [32]byte, v uint8, r [32]byte, s [32]byte) (common.Address, error) {
	var out []interface{}
	err := _WETHHandler.contract.Call(opts, &out, "_recoverSigner2", h, v, r, s)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// RecoverSigner2 is a free data retrieval call binding the contract method 0x8f667892.
//
// Solidity: function _recoverSigner2(bytes32 h, uint8 v, bytes32 r, bytes32 s) pure returns(address)
func (_WETHHandler *WETHHandlerSession) RecoverSigner2(h [32]byte, v uint8, r [32]byte, s [32]byte) (common.Address, error) {
	return _WETHHandler.Contract.RecoverSigner2(&_WETHHandler.CallOpts, h, v, r, s)
}

// RecoverSigner2 is a free data retrieval call binding the contract method 0x8f667892.
//
// Solidity: function _recoverSigner2(bytes32 h, uint8 v, bytes32 r, bytes32 s) pure returns(address)
func (_WETHHandler *WETHHandlerCallerSession) RecoverSigner2(h [32]byte, v uint8, r [32]byte, s [32]byte) (common.Address, error) {
	return _WETHHandler.Contract.RecoverSigner2(&_WETHHandler.CallOpts, h, v, r, s)
}

// ResourceIDToTokenContractAddress is a free data retrieval call binding the contract method 0x0a6d55d8.
//
// Solidity: function _resourceIDToTokenContractAddress(bytes32 ) view returns(address)
func (_WETHHandler *WETHHandlerCaller) ResourceIDToTokenContractAddress(opts *bind.CallOpts, arg0 [32]byte) (common.Address, error) {
	var out []interface{}
	err := _WETHHandler.contract.Call(opts, &out, "_resourceIDToTokenContractAddress", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// ResourceIDToTokenContractAddress is a free data retrieval call binding the contract method 0x0a6d55d8.
//
// Solidity: function _resourceIDToTokenContractAddress(bytes32 ) view returns(address)
func (_WETHHandler *WETHHandlerSession) ResourceIDToTokenContractAddress(arg0 [32]byte) (common.Address, error) {
	return _WETHHandler.Contract.ResourceIDToTokenContractAddress(&_WETHHandler.CallOpts, arg0)
}

// ResourceIDToTokenContractAddress is a free data retrieval call binding the contract method 0x0a6d55d8.
//
// Solidity: function _resourceIDToTokenContractAddress(bytes32 ) view returns(address)
func (_WETHHandler *WETHHandlerCallerSession) ResourceIDToTokenContractAddress(arg0 [32]byte) (common.Address, error) {
	return _WETHHandler.Contract.ResourceIDToTokenContractAddress(&_WETHHandler.CallOpts, arg0)
}

// TokenContractAddressToResourceID is a free data retrieval call binding the contract method 0xc8ba6c87.
//
// Solidity: function _tokenContractAddressToResourceID(address ) view returns(bytes32)
func (_WETHHandler *WETHHandlerCaller) TokenContractAddressToResourceID(opts *bind.CallOpts, arg0 common.Address) ([32]byte, error) {
	var out []interface{}
	err := _WETHHandler.contract.Call(opts, &out, "_tokenContractAddressToResourceID", arg0)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// TokenContractAddressToResourceID is a free data retrieval call binding the contract method 0xc8ba6c87.
//
// Solidity: function _tokenContractAddressToResourceID(address ) view returns(bytes32)
func (_WETHHandler *WETHHandlerSession) TokenContractAddressToResourceID(arg0 common.Address) ([32]byte, error) {
	return _WETHHandler.Contract.TokenContractAddressToResourceID(&_WETHHandler.CallOpts, arg0)
}

// TokenContractAddressToResourceID is a free data retrieval call binding the contract method 0xc8ba6c87.
//
// Solidity: function _tokenContractAddressToResourceID(address ) view returns(bytes32)
func (_WETHHandler *WETHHandlerCallerSession) TokenContractAddressToResourceID(arg0 common.Address) ([32]byte, error) {
	return _WETHHandler.Contract.TokenContractAddressToResourceID(&_WETHHandler.CallOpts, arg0)
}

// AddressToString is a free data retrieval call binding the contract method 0x5e57966d.
//
// Solidity: function addressToString(address account) pure returns(string)
func (_WETHHandler *WETHHandlerCaller) AddressToString(opts *bind.CallOpts, account common.Address) (string, error) {
	var out []interface{}
	err := _WETHHandler.contract.Call(opts, &out, "addressToString", account)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// AddressToString is a free data retrieval call binding the contract method 0x5e57966d.
//
// Solidity: function addressToString(address account) pure returns(string)
func (_WETHHandler *WETHHandlerSession) AddressToString(account common.Address) (string, error) {
	return _WETHHandler.Contract.AddressToString(&_WETHHandler.CallOpts, account)
}

// AddressToString is a free data retrieval call binding the contract method 0x5e57966d.
//
// Solidity: function addressToString(address account) pure returns(string)
func (_WETHHandler *WETHHandlerCallerSession) AddressToString(account common.Address) (string, error) {
	return _WETHHandler.Contract.AddressToString(&_WETHHandler.CallOpts, account)
}

// Bytes32ToString is a free data retrieval call binding the contract method 0x9201de55.
//
// Solidity: function bytes32ToString(bytes32 value) pure returns(string)
func (_WETHHandler *WETHHandlerCaller) Bytes32ToString(opts *bind.CallOpts, value [32]byte) (string, error) {
	var out []interface{}
	err := _WETHHandler.contract.Call(opts, &out, "bytes32ToString", value)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Bytes32ToString is a free data retrieval call binding the contract method 0x9201de55.
//
// Solidity: function bytes32ToString(bytes32 value) pure returns(string)
func (_WETHHandler *WETHHandlerSession) Bytes32ToString(value [32]byte) (string, error) {
	return _WETHHandler.Contract.Bytes32ToString(&_WETHHandler.CallOpts, value)
}

// Bytes32ToString is a free data retrieval call binding the contract method 0x9201de55.
//
// Solidity: function bytes32ToString(bytes32 value) pure returns(string)
func (_WETHHandler *WETHHandlerCallerSession) Bytes32ToString(value [32]byte) (string, error) {
	return _WETHHandler.Contract.Bytes32ToString(&_WETHHandler.CallOpts, value)
}

// BytesToString is a free data retrieval call binding the contract method 0x39614e4f.
//
// Solidity: function bytesToString(bytes value) pure returns(string)
func (_WETHHandler *WETHHandlerCaller) BytesToString(opts *bind.CallOpts, value []byte) (string, error) {
	var out []interface{}
	err := _WETHHandler.contract.Call(opts, &out, "bytesToString", value)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// BytesToString is a free data retrieval call binding the contract method 0x39614e4f.
//
// Solidity: function bytesToString(bytes value) pure returns(string)
func (_WETHHandler *WETHHandlerSession) BytesToString(value []byte) (string, error) {
	return _WETHHandler.Contract.BytesToString(&_WETHHandler.CallOpts, value)
}

// BytesToString is a free data retrieval call binding the contract method 0x39614e4f.
//
// Solidity: function bytesToString(bytes value) pure returns(string)
func (_WETHHandler *WETHHandlerCallerSession) BytesToString(value []byte) (string, error) {
	return _WETHHandler.Contract.BytesToString(&_WETHHandler.CallOpts, value)
}

// GetDepositRecord is a free data retrieval call binding the contract method 0xba484c09.
//
// Solidity: function getDepositRecord(uint64 depositNonce, uint8 destId) view returns((address,uint8,bytes32,bytes,address,uint256,bytes))
func (_WETHHandler *WETHHandlerCaller) GetDepositRecord(opts *bind.CallOpts, depositNonce uint64, destId uint8) (WETHHandlerDepositRecord, error) {
	var out []interface{}
	err := _WETHHandler.contract.Call(opts, &out, "getDepositRecord", depositNonce, destId)

	if err != nil {
		return *new(WETHHandlerDepositRecord), err
	}

	out0 := *abi.ConvertType(out[0], new(WETHHandlerDepositRecord)).(*WETHHandlerDepositRecord)

	return out0, err

}

// GetDepositRecord is a free data retrieval call binding the contract method 0xba484c09.
//
// Solidity: function getDepositRecord(uint64 depositNonce, uint8 destId) view returns((address,uint8,bytes32,bytes,address,uint256,bytes))
func (_WETHHandler *WETHHandlerSession) GetDepositRecord(depositNonce uint64, destId uint8) (WETHHandlerDepositRecord, error) {
	return _WETHHandler.Contract.GetDepositRecord(&_WETHHandler.CallOpts, depositNonce, destId)
}

// GetDepositRecord is a free data retrieval call binding the contract method 0xba484c09.
//
// Solidity: function getDepositRecord(uint64 depositNonce, uint8 destId) view returns((address,uint8,bytes32,bytes,address,uint256,bytes))
func (_WETHHandler *WETHHandlerCallerSession) GetDepositRecord(depositNonce uint64, destId uint8) (WETHHandlerDepositRecord, error) {
	return _WETHHandler.Contract.GetDepositRecord(&_WETHHandler.CallOpts, depositNonce, destId)
}

// ToStringBase is a free data retrieval call binding the contract method 0x8d1b75e4.
//
// Solidity: function toStringBase(bytes data) pure returns(string)
func (_WETHHandler *WETHHandlerCaller) ToStringBase(opts *bind.CallOpts, data []byte) (string, error) {
	var out []interface{}
	err := _WETHHandler.contract.Call(opts, &out, "toStringBase", data)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// ToStringBase is a free data retrieval call binding the contract method 0x8d1b75e4.
//
// Solidity: function toStringBase(bytes data) pure returns(string)
func (_WETHHandler *WETHHandlerSession) ToStringBase(data []byte) (string, error) {
	return _WETHHandler.Contract.ToStringBase(&_WETHHandler.CallOpts, data)
}

// ToStringBase is a free data retrieval call binding the contract method 0x8d1b75e4.
//
// Solidity: function toStringBase(bytes data) pure returns(string)
func (_WETHHandler *WETHHandlerCallerSession) ToStringBase(data []byte) (string, error) {
	return _WETHHandler.Contract.ToStringBase(&_WETHHandler.CallOpts, data)
}

// UintToString is a free data retrieval call binding the contract method 0xe9395679.
//
// Solidity: function uintToString(uint256 value) pure returns(string)
func (_WETHHandler *WETHHandlerCaller) UintToString(opts *bind.CallOpts, value *big.Int) (string, error) {
	var out []interface{}
	err := _WETHHandler.contract.Call(opts, &out, "uintToString", value)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// UintToString is a free data retrieval call binding the contract method 0xe9395679.
//
// Solidity: function uintToString(uint256 value) pure returns(string)
func (_WETHHandler *WETHHandlerSession) UintToString(value *big.Int) (string, error) {
	return _WETHHandler.Contract.UintToString(&_WETHHandler.CallOpts, value)
}

// UintToString is a free data retrieval call binding the contract method 0xe9395679.
//
// Solidity: function uintToString(uint256 value) pure returns(string)
func (_WETHHandler *WETHHandlerCallerSession) UintToString(value *big.Int) (string, error) {
	return _WETHHandler.Contract.UintToString(&_WETHHandler.CallOpts, value)
}

// SafeTransferETH is a paid mutator transaction binding the contract method 0x5de11799.
//
// Solidity: function _safeTransferETH(address _to, uint256 _value) returns()
func (_WETHHandler *WETHHandlerTransactor) SafeTransferETH(opts *bind.TransactOpts, _to common.Address, _value *big.Int) (*types.Transaction, error) {
	return _WETHHandler.contract.Transact(opts, "_safeTransferETH", _to, _value)
}

// SafeTransferETH is a paid mutator transaction binding the contract method 0x5de11799.
//
// Solidity: function _safeTransferETH(address _to, uint256 _value) returns()
func (_WETHHandler *WETHHandlerSession) SafeTransferETH(_to common.Address, _value *big.Int) (*types.Transaction, error) {
	return _WETHHandler.Contract.SafeTransferETH(&_WETHHandler.TransactOpts, _to, _value)
}

// SafeTransferETH is a paid mutator transaction binding the contract method 0x5de11799.
//
// Solidity: function _safeTransferETH(address _to, uint256 _value) returns()
func (_WETHHandler *WETHHandlerTransactorSession) SafeTransferETH(_to common.Address, _value *big.Int) (*types.Transaction, error) {
	return _WETHHandler.Contract.SafeTransferETH(&_WETHHandler.TransactOpts, _to, _value)
}

// Deposit is a paid mutator transaction binding the contract method 0x38995da9.
//
// Solidity: function deposit(bytes32 resourceID, uint8 destinationChainID, uint64 depositNonce, address depositer, bytes data) returns()
func (_WETHHandler *WETHHandlerTransactor) Deposit(opts *bind.TransactOpts, resourceID [32]byte, destinationChainID uint8, depositNonce uint64, depositer common.Address, data []byte) (*types.Transaction, error) {
	return _WETHHandler.contract.Transact(opts, "deposit", resourceID, destinationChainID, depositNonce, depositer, data)
}

// Deposit is a paid mutator transaction binding the contract method 0x38995da9.
//
// Solidity: function deposit(bytes32 resourceID, uint8 destinationChainID, uint64 depositNonce, address depositer, bytes data) returns()
func (_WETHHandler *WETHHandlerSession) Deposit(resourceID [32]byte, destinationChainID uint8, depositNonce uint64, depositer common.Address, data []byte) (*types.Transaction, error) {
	return _WETHHandler.Contract.Deposit(&_WETHHandler.TransactOpts, resourceID, destinationChainID, depositNonce, depositer, data)
}

// Deposit is a paid mutator transaction binding the contract method 0x38995da9.
//
// Solidity: function deposit(bytes32 resourceID, uint8 destinationChainID, uint64 depositNonce, address depositer, bytes data) returns()
func (_WETHHandler *WETHHandlerTransactorSession) Deposit(resourceID [32]byte, destinationChainID uint8, depositNonce uint64, depositer common.Address, data []byte) (*types.Transaction, error) {
	return _WETHHandler.Contract.Deposit(&_WETHHandler.TransactOpts, resourceID, destinationChainID, depositNonce, depositer, data)
}

// ExecuteProposal is a paid mutator transaction binding the contract method 0x138f0b8b.
//
// Solidity: function executeProposal(bytes32 resourceID, address[36] signers, bytes data) returns(bool, bool, address, uint256)
func (_WETHHandler *WETHHandlerTransactor) ExecuteProposal(opts *bind.TransactOpts, resourceID [32]byte, signers [36]common.Address, data []byte) (*types.Transaction, error) {
	return _WETHHandler.contract.Transact(opts, "executeProposal", resourceID, signers, data)
}

// ExecuteProposal is a paid mutator transaction binding the contract method 0x138f0b8b.
//
// Solidity: function executeProposal(bytes32 resourceID, address[36] signers, bytes data) returns(bool, bool, address, uint256)
func (_WETHHandler *WETHHandlerSession) ExecuteProposal(resourceID [32]byte, signers [36]common.Address, data []byte) (*types.Transaction, error) {
	return _WETHHandler.Contract.ExecuteProposal(&_WETHHandler.TransactOpts, resourceID, signers, data)
}

// ExecuteProposal is a paid mutator transaction binding the contract method 0x138f0b8b.
//
// Solidity: function executeProposal(bytes32 resourceID, address[36] signers, bytes data) returns(bool, bool, address, uint256)
func (_WETHHandler *WETHHandlerTransactorSession) ExecuteProposal(resourceID [32]byte, signers [36]common.Address, data []byte) (*types.Transaction, error) {
	return _WETHHandler.Contract.ExecuteProposal(&_WETHHandler.TransactOpts, resourceID, signers, data)
}

// SetBurnable is a paid mutator transaction binding the contract method 0x07b7ed99.
//
// Solidity: function setBurnable(address contractAddress) returns()
func (_WETHHandler *WETHHandlerTransactor) SetBurnable(opts *bind.TransactOpts, contractAddress common.Address) (*types.Transaction, error) {
	return _WETHHandler.contract.Transact(opts, "setBurnable", contractAddress)
}

// SetBurnable is a paid mutator transaction binding the contract method 0x07b7ed99.
//
// Solidity: function setBurnable(address contractAddress) returns()
func (_WETHHandler *WETHHandlerSession) SetBurnable(contractAddress common.Address) (*types.Transaction, error) {
	return _WETHHandler.Contract.SetBurnable(&_WETHHandler.TransactOpts, contractAddress)
}

// SetBurnable is a paid mutator transaction binding the contract method 0x07b7ed99.
//
// Solidity: function setBurnable(address contractAddress) returns()
func (_WETHHandler *WETHHandlerTransactorSession) SetBurnable(contractAddress common.Address) (*types.Transaction, error) {
	return _WETHHandler.Contract.SetBurnable(&_WETHHandler.TransactOpts, contractAddress)
}

// SetResource is a paid mutator transaction binding the contract method 0xb8fa3736.
//
// Solidity: function setResource(bytes32 resourceID, address contractAddress) returns()
func (_WETHHandler *WETHHandlerTransactor) SetResource(opts *bind.TransactOpts, resourceID [32]byte, contractAddress common.Address) (*types.Transaction, error) {
	return _WETHHandler.contract.Transact(opts, "setResource", resourceID, contractAddress)
}

// SetResource is a paid mutator transaction binding the contract method 0xb8fa3736.
//
// Solidity: function setResource(bytes32 resourceID, address contractAddress) returns()
func (_WETHHandler *WETHHandlerSession) SetResource(resourceID [32]byte, contractAddress common.Address) (*types.Transaction, error) {
	return _WETHHandler.Contract.SetResource(&_WETHHandler.TransactOpts, resourceID, contractAddress)
}

// SetResource is a paid mutator transaction binding the contract method 0xb8fa3736.
//
// Solidity: function setResource(bytes32 resourceID, address contractAddress) returns()
func (_WETHHandler *WETHHandlerTransactorSession) SetResource(resourceID [32]byte, contractAddress common.Address) (*types.Transaction, error) {
	return _WETHHandler.Contract.SetResource(&_WETHHandler.TransactOpts, resourceID, contractAddress)
}

// Withdraw is a paid mutator transaction binding the contract method 0xd9caed12.
//
// Solidity: function withdraw(address tokenAddress, address recipient, uint256 amountOrTokenID) returns()
func (_WETHHandler *WETHHandlerTransactor) Withdraw(opts *bind.TransactOpts, tokenAddress common.Address, recipient common.Address, amountOrTokenID *big.Int) (*types.Transaction, error) {
	return _WETHHandler.contract.Transact(opts, "withdraw", tokenAddress, recipient, amountOrTokenID)
}

// Withdraw is a paid mutator transaction binding the contract method 0xd9caed12.
//
// Solidity: function withdraw(address tokenAddress, address recipient, uint256 amountOrTokenID) returns()
func (_WETHHandler *WETHHandlerSession) Withdraw(tokenAddress common.Address, recipient common.Address, amountOrTokenID *big.Int) (*types.Transaction, error) {
	return _WETHHandler.Contract.Withdraw(&_WETHHandler.TransactOpts, tokenAddress, recipient, amountOrTokenID)
}

// Withdraw is a paid mutator transaction binding the contract method 0xd9caed12.
//
// Solidity: function withdraw(address tokenAddress, address recipient, uint256 amountOrTokenID) returns()
func (_WETHHandler *WETHHandlerTransactorSession) Withdraw(tokenAddress common.Address, recipient common.Address, amountOrTokenID *big.Int) (*types.Transaction, error) {
	return _WETHHandler.Contract.Withdraw(&_WETHHandler.TransactOpts, tokenAddress, recipient, amountOrTokenID)
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_WETHHandler *WETHHandlerTransactor) Receive(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _WETHHandler.contract.RawTransact(opts, nil) // calldata is disallowed for receive function
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_WETHHandler *WETHHandlerSession) Receive() (*types.Transaction, error) {
	return _WETHHandler.Contract.Receive(&_WETHHandler.TransactOpts)
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_WETHHandler *WETHHandlerTransactorSession) Receive() (*types.Transaction, error) {
	return _WETHHandler.Contract.Receive(&_WETHHandler.TransactOpts)
}

// WETHHandlerLogStringIterator is returned from FilterLogString and is used to iterate over the raw logs and unpacked data for LogString events raised by the WETHHandler contract.
type WETHHandlerLogStringIterator struct {
	Event *WETHHandlerLogString // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *WETHHandlerLogStringIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(WETHHandlerLogString)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(WETHHandlerLogString)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *WETHHandlerLogStringIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *WETHHandlerLogStringIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// WETHHandlerLogString represents a LogString event raised by the WETHHandler contract.
type WETHHandlerLogString struct {
	Data string
	Raw  types.Log // Blockchain specific contextual infos
}

// FilterLogString is a free log retrieval operation binding the contract event 0xa95e6e2a182411e7a6f9ed114a85c3761d87f9b8f453d842c71235aa64fff99f.
//
// Solidity: event LogString(string data)
func (_WETHHandler *WETHHandlerFilterer) FilterLogString(opts *bind.FilterOpts) (*WETHHandlerLogStringIterator, error) {

	logs, sub, err := _WETHHandler.contract.FilterLogs(opts, "LogString")
	if err != nil {
		return nil, err
	}
	return &WETHHandlerLogStringIterator{contract: _WETHHandler.contract, event: "LogString", logs: logs, sub: sub}, nil
}

// WatchLogString is a free log subscription operation binding the contract event 0xa95e6e2a182411e7a6f9ed114a85c3761d87f9b8f453d842c71235aa64fff99f.
//
// Solidity: event LogString(string data)
func (_WETHHandler *WETHHandlerFilterer) WatchLogString(opts *bind.WatchOpts, sink chan<- *WETHHandlerLogString) (event.Subscription, error) {

	logs, sub, err := _WETHHandler.contract.WatchLogs(opts, "LogString")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(WETHHandlerLogString)
				if err := _WETHHandler.contract.UnpackLog(event, "LogString", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseLogString is a log parse operation binding the contract event 0xa95e6e2a182411e7a6f9ed114a85c3761d87f9b8f453d842c71235aa64fff99f.
//
// Solidity: event LogString(string data)
func (_WETHHandler *WETHHandlerFilterer) ParseLogString(log types.Log) (*WETHHandlerLogString, error) {
	event := new(WETHHandlerLogString)
	if err := _WETHHandler.contract.UnpackLog(event, "LogString", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
